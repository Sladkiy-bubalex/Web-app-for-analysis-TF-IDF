"""changing the name of the Sorted_tfidf model to Document, adding a relationship in the Document model

Revision ID: 8da1f1bebd4b
Revises: 28b58775d0da
Create Date: 2025-06-07 17:47:37.337398

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8da1f1bebd4b'
down_revision: Union[str, None] = '28b58775d0da'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Documents',
    sa.Column('name_file', sa.String(), nullable=False),
    sa.Column('data', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('Sorted_tfidf')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Sorted_tfidf',
    sa.Column('name_file', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('data', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], name=op.f('Sorted_tfidf_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('Sorted_tfidf_pkey'))
    )
    op.drop_table('Documents')
    # ### end Alembic commands ###
